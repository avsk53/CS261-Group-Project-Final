.vscode/


# Created by .ignore support plugin (hsz.mobi)
### Node template
# Logs
Frontend/logs
Frontend/*.log
Frontend/npm-debug.log*
Frontend/yarn-debug.log*
Frontend/yarn-error.log*


# Runtime data
Frontend/pids
Frontend/*.pid
Frontend/*.seed
Frontend/*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
Frontend/lib-cov

# Coverage directory used by tools like istanbul
Frontend/coverage

# nyc test coverage
Frontend/.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
Frontend/.grunt

# Bower dependency directory (https://bower.io/)
Frontend/bower_components

# node-waf configuration
Frontend/.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
Frontend/build/Release

# Dependency directories
Frontend/node_modules/
Frontend/jspm_packages/

# TypeScript v1 declaration files
Frontend/typings/

# Optional npm cache directory
Frontend/.npm

# Optional eslint cache
Frontend/.eslintcache

# Optional REPL history
Frontend/.node_repl_history

# Output of 'npm pack'
Frontend/*.tgz

# Yarn Integrity file
Frontend/.yarn-integrity

# dotenv environment variables file
Frontend/.env

# parcel-bundler cache (https://parceljs.org/)
Frontend/.cache

# next.js build output
Frotned/.next

# nuxt.js build output
Frontend/.nuxt

# Nuxt generate
Frontend/dist

# vuepress build output
Frontend/.vuepress/dist

# Serverless directories
Frontend/.serverless

# IDE / Editor
Frontend/.idea

# Service worker
Frontend/sw.*

Frontend/.github/

# macOS
.DS_Store

# Vim swap files
*.swp



# Byte-compiled / optimized / DLL files
Backend/__pycache__/
Backend/*.py[cod]
Backend/*$py.class

# C extensions
Backend/*.so

# Distribution / packaging
Backend/.Python
Backend/build/
Backend/develop-eggs/
Backend/dist/
Backend/downloads/
Backend/eggs/
Backend/.eggs/
Backend/lib/
Backend/lib64/
Backend/parts/
Backend/sdist/
Backend/var/
Backend/wheels/
Backend/share/python-wheels/
Backend/*.egg-info/
Backend/.installed.cfg
Backend/*.egg
Backend/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
Backend/*.manifest
Backend/*.spec

# Installer logs
Backend/pip-log.txt
Backend/pip-delete-this-directory.txt

# Unit test / coverage reports
Backend/htmlcov/
Backend/.tox/
Backend/.nox/
Backend/.coverage
Backend/.coverage.*
Backend/.cache
Backend/nosetests.xml
Backend/coverage.xml
Backend/*.cover
Backend/*.py,cover
Backend/.hypothesis/
Backend/.pytest_cache/
Backend/cover/

# Translations
Backend/*.mo
Backend/*.pot

# Django stuff:
Backend/*.log
Backend/local_settings.py
Backend/db.sqlite3
Backend/db.sqlite3-journal

# Flask stuff:
Backend/instance/
Backend/.webassets-cache

# Scrapy stuff:
Backend/.scrapy

# Sphinx documentation
Backend/docs/_build/

# PyBuilder
Backend/.pybuilder/
Backend/target/

# Jupyter Notebook
Backend/.ipynb_checkpoints

# IPython
Backend/profile_default/
Backend/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
Backend/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
Backend/__pypackages__/

# Celery stuff
Backend/celerybeat-schedule
Backend/celerybeat.pid

# SageMath parsed files
Backend/*.sage.py

# Environments
Backend/.env
Backend/.venv
Backend/env/
Backend/venv/
Backend/ENV/
Backend/env.bak/
Backend/venv.bak/

# Spyder project settings
Backend/.spyderproject
Backend/.spyproject

# Rope project settings
Backend/.ropeproject

# mkdocs documentation
Backend//site

# mypy
Backend/.mypy_cache/
Backend/.dmypy.json
Backend/dmypy.json

# Pyre type checker
Backend/.pyre/

# pytype static type analyzer
Backend/.pytype/

# Cython debug symbols
Backend/cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
